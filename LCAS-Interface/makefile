# Compiler and flags
CXX = g++
CXXFLAGS = -std=c++17 -Wall -O2

# Qt variables (use `pkg-config` for simplicity)
QT_CFLAGS = $(shell pkg-config --cflags Qt5Widgets)
QT_LIBS   = $(shell pkg-config --libs Qt5Widgets)

# OpenCV variables
OPENCV_CFLAGS = $(shell pkg-config --cflags opencv4)
OPENCV_LIBS   = $(shell pkg-config --libs opencv4)

# Sources
SOURCES = main.cpp mainwindow.cpp ThermalCameraManager.cpp
HEADERS = mainwindow.h ThermalCameraManager.h
UI_HDRS = ui_mainwindow.h  # Generated by Qt Designer's uic

# MOC and UIC generated files
MOCS = moc_mainwindow.cpp
UIC = ui_mainwindow.h

# All .cpp files
OBJECTS = $(SOURCES:.cpp=.o) $(MOCS:.cpp=.o)

# Output binary
TARGET = thermal_gui

# Default rule
all: $(TARGET)

# Build target
$(TARGET): $(OBJECTS)
	$(CXX) $(CXXFLAGS) -o $@ $^ $(QT_LIBS) $(OPENCV_LIBS)

# Compile .cpp to .o
%.o: %.cpp
	$(CXX) $(CXXFLAGS) $(QT_CFLAGS) $(OPENCV_CFLAGS) -c $< -o $@

# Generate moc_mainwindow.cpp from mainwindow.h
moc_mainwindow.cpp: mainwindow.h
	moc $(QT_CFLAGS) $< -o $@

# Generate ui_mainwindow.h from mainwindow.ui (you can also do this manually with Qt Designer)
ui_mainwindow.h: mainwindow.ui
	uic $< -o $@

# Clean rule
clean:
	rm -f $(TARGET) *.o moc_*.cpp ui_*.h

.PHONY: all clean
